/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables;


import com.opac.scms.Applet;
import com.opac.scms.Keys;
import com.opac.scms.tables.records.ListingCategoriesRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListingCategories extends TableImpl<ListingCategoriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>applet.listing_categories</code>
     */
    public static final ListingCategories LISTING_CATEGORIES = new ListingCategories();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ListingCategoriesRecord> getRecordType() {
        return ListingCategoriesRecord.class;
    }

    /**
     * The column <code>applet.listing_categories.id</code>.
     */
    public final TableField<ListingCategoriesRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>applet.listing_categories.name</code>.
     */
    public final TableField<ListingCategoriesRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>applet.listing_categories.description</code>.
     */
    public final TableField<ListingCategoriesRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>applet.listing_categories.advert_published_count</code>.
     */
    public final TableField<ListingCategoriesRecord, Integer> ADVERT_PUBLISHED_COUNT = createField(DSL.name("advert_published_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>applet.listing_categories.advert_count</code>.
     */
    public final TableField<ListingCategoriesRecord, Integer> ADVERT_COUNT = createField(DSL.name("advert_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>applet.listing_categories.created</code>.
     */
    public final TableField<ListingCategoriesRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>applet.listing_categories.modified</code>.
     */
    public final TableField<ListingCategoriesRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), SQLDataType.LOCALDATETIME(0), this, "");

    private ListingCategories(Name alias, Table<ListingCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ListingCategories(Name alias, Table<ListingCategoriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>applet.listing_categories</code> table reference
     */
    public ListingCategories(String alias) {
        this(DSL.name(alias), LISTING_CATEGORIES);
    }

    /**
     * Create an aliased <code>applet.listing_categories</code> table reference
     */
    public ListingCategories(Name alias) {
        this(alias, LISTING_CATEGORIES);
    }

    /**
     * Create a <code>applet.listing_categories</code> table reference
     */
    public ListingCategories() {
        this(DSL.name("listing_categories"), null);
    }

    public <O extends Record> ListingCategories(Table<O> child, ForeignKey<O, ListingCategoriesRecord> key) {
        super(child, key, LISTING_CATEGORIES);
    }

    @Override
    public Schema getSchema() {
        return Applet.APPLET;
    }

    @Override
    public UniqueKey<ListingCategoriesRecord> getPrimaryKey() {
        return Keys.KEY_LISTING_CATEGORIES_PRIMARY;
    }

    @Override
    public List<UniqueKey<ListingCategoriesRecord>> getKeys() {
        return Arrays.<UniqueKey<ListingCategoriesRecord>>asList(Keys.KEY_LISTING_CATEGORIES_PRIMARY);
    }

    @Override
    public ListingCategories as(String alias) {
        return new ListingCategories(DSL.name(alias), this);
    }

    @Override
    public ListingCategories as(Name alias) {
        return new ListingCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ListingCategories rename(String name) {
        return new ListingCategories(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ListingCategories rename(Name name) {
        return new ListingCategories(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
