/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables;


import com.opac.scms.Applet;
import com.opac.scms.Indexes;
import com.opac.scms.Keys;
import com.opac.scms.tables.records.DeviceUsersRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceUsers extends TableImpl<DeviceUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>applet.device_users</code>
     */
    public static final DeviceUsers DEVICE_USERS = new DeviceUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeviceUsersRecord> getRecordType() {
        return DeviceUsersRecord.class;
    }

    /**
     * The column <code>applet.device_users.id</code>.
     */
    public final TableField<DeviceUsersRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>applet.device_users.user_id</code>.
     */
    public final TableField<DeviceUsersRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>applet.device_users.device</code>.
     */
    public final TableField<DeviceUsersRecord, String> DEVICE = createField(DSL.name("device"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>applet.device_users.device_ui</code>.
     */
    public final TableField<DeviceUsersRecord, String> DEVICE_UI = createField(DSL.name("device_ui"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.device_users.os_type</code>.
     */
    public final TableField<DeviceUsersRecord, Byte> OS_TYPE = createField(DSL.name("os_type"), SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>applet.device_users.last_location_latitude</code>.
     */
    public final TableField<DeviceUsersRecord, BigDecimal> LAST_LOCATION_LATITUDE = createField(DSL.name("last_location_latitude"), SQLDataType.DECIMAL(20, 17), this, "");

    /**
     * The column <code>applet.device_users.last_location_longitude</code>.
     */
    public final TableField<DeviceUsersRecord, BigDecimal> LAST_LOCATION_LONGITUDE = createField(DSL.name("last_location_longitude"), SQLDataType.DECIMAL(20, 17), this, "");

    /**
     * The column <code>applet.device_users.last_connection</code>.
     */
    public final TableField<DeviceUsersRecord, LocalDateTime> LAST_CONNECTION = createField(DSL.name("last_connection"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>applet.device_users.notifications_state</code>.
     */
    public final TableField<DeviceUsersRecord, Byte> NOTIFICATIONS_STATE = createField(DSL.name("notifications_state"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>applet.device_users.created</code>.
     */
    public final TableField<DeviceUsersRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>applet.device_users.modified</code>.
     */
    public final TableField<DeviceUsersRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), SQLDataType.LOCALDATETIME(0), this, "");

    private DeviceUsers(Name alias, Table<DeviceUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeviceUsers(Name alias, Table<DeviceUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>applet.device_users</code> table reference
     */
    public DeviceUsers(String alias) {
        this(DSL.name(alias), DEVICE_USERS);
    }

    /**
     * Create an aliased <code>applet.device_users</code> table reference
     */
    public DeviceUsers(Name alias) {
        this(alias, DEVICE_USERS);
    }

    /**
     * Create a <code>applet.device_users</code> table reference
     */
    public DeviceUsers() {
        this(DSL.name("device_users"), null);
    }

    public <O extends Record> DeviceUsers(Table<O> child, ForeignKey<O, DeviceUsersRecord> key) {
        super(child, key, DEVICE_USERS);
    }

    @Override
    public Schema getSchema() {
        return Applet.APPLET;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEVICE_USERS_USER_ID);
    }

    @Override
    public Identity<DeviceUsersRecord, Integer> getIdentity() {
        return (Identity<DeviceUsersRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<DeviceUsersRecord> getPrimaryKey() {
        return Keys.KEY_DEVICE_USERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<DeviceUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<DeviceUsersRecord>>asList(Keys.KEY_DEVICE_USERS_PRIMARY);
    }

    @Override
    public List<ForeignKey<DeviceUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeviceUsersRecord, ?>>asList(Keys.DEVICE_USERS_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.DEVICE_USERS_IBFK_1);
    }

    @Override
    public DeviceUsers as(String alias) {
        return new DeviceUsers(DSL.name(alias), this);
    }

    @Override
    public DeviceUsers as(Name alias) {
        return new DeviceUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceUsers rename(String name) {
        return new DeviceUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceUsers rename(Name name) {
        return new DeviceUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, String, String, Byte, BigDecimal, BigDecimal, LocalDateTime, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
