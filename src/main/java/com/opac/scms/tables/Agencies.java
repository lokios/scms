/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables;


import com.opac.scms.Applet;
import com.opac.scms.tables.records.AgenciesRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Agencies extends TableImpl<AgenciesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>applet.agencies</code>
     */
    public static final Agencies AGENCIES = new Agencies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgenciesRecord> getRecordType() {
        return AgenciesRecord.class;
    }

    /**
     * The column <code>applet.agencies.id</code>.
     */
    public final TableField<AgenciesRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>applet.agencies.firm_name</code>.
     */
    public final TableField<AgenciesRecord, String> FIRM_NAME = createField(DSL.name("firm_name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.npn</code>.
     */
    public final TableField<AgenciesRecord, String> NPN = createField(DSL.name("npn"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.license_number</code>.
     */
    public final TableField<AgenciesRecord, String> LICENSE_NUMBER = createField(DSL.name("license_number"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.license_state</code>.
     */
    public final TableField<AgenciesRecord, String> LICENSE_STATE = createField(DSL.name("license_state"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.email_address</code>.
     */
    public final TableField<AgenciesRecord, String> EMAIL_ADDRESS = createField(DSL.name("email_address"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.email_domain</code>.
     */
    public final TableField<AgenciesRecord, String> EMAIL_DOMAIN = createField(DSL.name("email_domain"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.email_personal</code>.
     */
    public final TableField<AgenciesRecord, String> EMAIL_PERSONAL = createField(DSL.name("email_personal"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.businessphone</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESSPHONE = createField(DSL.name("businessphone"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_address1</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_ADDRESS1 = createField(DSL.name("business_address1"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_address2</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_ADDRESS2 = createField(DSL.name("business_address2"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_city</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_CITY = createField(DSL.name("business_city"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_state</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_STATE = createField(DSL.name("business_state"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_zip</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_ZIP = createField(DSL.name("business_zip"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.business_zip_without_postal_code</code>.
     */
    public final TableField<AgenciesRecord, String> BUSINESS_ZIP_WITHOUT_POSTAL_CODE = createField(DSL.name("business_zip_without_postal_code"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.Full_Address_WA</code>.
     */
    public final TableField<AgenciesRecord, String> FULL_ADDRESS_WA = createField(DSL.name("Full_Address_WA"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.Google_Formatted_Address</code>.
     */
    public final TableField<AgenciesRecord, String> GOOGLE_FORMATTED_ADDRESS = createField(DSL.name("Google_Formatted_Address"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.Google_Latitude</code>.
     */
    public final TableField<AgenciesRecord, BigDecimal> GOOGLE_LATITUDE = createField(DSL.name("Google_Latitude"), SQLDataType.DECIMAL(20, 17), this, "");

    /**
     * The column <code>applet.agencies.Google_Longitude</code>.
     */
    public final TableField<AgenciesRecord, BigDecimal> GOOGLE_LONGITUDE = createField(DSL.name("Google_Longitude"), SQLDataType.DECIMAL(20, 17), this, "");

    /**
     * The column <code>applet.agencies.Type</code>.
     */
    public final TableField<AgenciesRecord, String> TYPE = createField(DSL.name("Type"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>applet.agencies.Use_Record_For_Lat_Long</code>.
     */
    public final TableField<AgenciesRecord, Integer> USE_RECORD_FOR_LAT_LONG = createField(DSL.name("Use_Record_For_Lat_Long"), SQLDataType.INTEGER.defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>applet.agencies.created_at</code>.
     */
    public final TableField<AgenciesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>applet.agencies.updated_at</code>.
     */
    public final TableField<AgenciesRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0), this, "");

    private Agencies(Name alias, Table<AgenciesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Agencies(Name alias, Table<AgenciesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>applet.agencies</code> table reference
     */
    public Agencies(String alias) {
        this(DSL.name(alias), AGENCIES);
    }

    /**
     * Create an aliased <code>applet.agencies</code> table reference
     */
    public Agencies(Name alias) {
        this(alias, AGENCIES);
    }

    /**
     * Create a <code>applet.agencies</code> table reference
     */
    public Agencies() {
        this(DSL.name("agencies"), null);
    }

    public <O extends Record> Agencies(Table<O> child, ForeignKey<O, AgenciesRecord> key) {
        super(child, key, AGENCIES);
    }

    @Override
    public Schema getSchema() {
        return Applet.APPLET;
    }

    @Override
    public Agencies as(String alias) {
        return new Agencies(DSL.name(alias), this);
    }

    @Override
    public Agencies as(Name alias) {
        return new Agencies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Agencies rename(String name) {
        return new Agencies(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Agencies rename(Name name) {
        return new Agencies(name, null);
    }
}
