/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables;


import com.opac.scms.Applet;
import com.opac.scms.Keys;
import com.opac.scms.tables.records.VerifyAccountRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VerifyAccount extends TableImpl<VerifyAccountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>applet.verify_account</code>
     */
    public static final VerifyAccount VERIFY_ACCOUNT = new VerifyAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VerifyAccountRecord> getRecordType() {
        return VerifyAccountRecord.class;
    }

    /**
     * The column <code>applet.verify_account.id</code>.
     */
    public final TableField<VerifyAccountRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>applet.verify_account.created_date</code>.
     */
    public final TableField<VerifyAccountRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>applet.verify_account.expired_data_token</code>.
     */
    public final TableField<VerifyAccountRecord, LocalDateTime> EXPIRED_DATA_TOKEN = createField(DSL.name("expired_data_token"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>applet.verify_account.token</code>.
     */
    public final TableField<VerifyAccountRecord, String> TOKEN = createField(DSL.name("token"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>applet.verify_account.account_id</code>.
     */
    public final TableField<VerifyAccountRecord, Long> ACCOUNT_ID = createField(DSL.name("account_id"), SQLDataType.BIGINT, this, "");

    private VerifyAccount(Name alias, Table<VerifyAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private VerifyAccount(Name alias, Table<VerifyAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>applet.verify_account</code> table reference
     */
    public VerifyAccount(String alias) {
        this(DSL.name(alias), VERIFY_ACCOUNT);
    }

    /**
     * Create an aliased <code>applet.verify_account</code> table reference
     */
    public VerifyAccount(Name alias) {
        this(alias, VERIFY_ACCOUNT);
    }

    /**
     * Create a <code>applet.verify_account</code> table reference
     */
    public VerifyAccount() {
        this(DSL.name("verify_account"), null);
    }

    public <O extends Record> VerifyAccount(Table<O> child, ForeignKey<O, VerifyAccountRecord> key) {
        super(child, key, VERIFY_ACCOUNT);
    }

    @Override
    public Schema getSchema() {
        return Applet.APPLET;
    }

    @Override
    public Identity<VerifyAccountRecord, Long> getIdentity() {
        return (Identity<VerifyAccountRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<VerifyAccountRecord> getPrimaryKey() {
        return Keys.KEY_VERIFY_ACCOUNT_PRIMARY;
    }

    @Override
    public List<UniqueKey<VerifyAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<VerifyAccountRecord>>asList(Keys.KEY_VERIFY_ACCOUNT_PRIMARY);
    }

    @Override
    public VerifyAccount as(String alias) {
        return new VerifyAccount(DSL.name(alias), this);
    }

    @Override
    public VerifyAccount as(Name alias) {
        return new VerifyAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VerifyAccount rename(String name) {
        return new VerifyAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VerifyAccount rename(Name name) {
        return new VerifyAccount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, LocalDateTime, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
