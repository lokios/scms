/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables.records;


import com.opac.scms.tables.Payments;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentsRecord extends UpdatableRecordImpl<PaymentsRecord> implements Record11<Integer, String, Integer, Integer, Integer, Integer, BigDecimal, BigDecimal, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>applet.payments.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>applet.payments.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>applet.payments.stripe_charge_id</code>.
     */
    public void setStripeChargeId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>applet.payments.stripe_charge_id</code>.
     */
    public String getStripeChargeId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>applet.payments.mangopay_pay_id</code>.
     */
    public void setMangopayPayId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>applet.payments.mangopay_pay_id</code>.
     */
    public Integer getMangopayPayId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>applet.payments.mangopay_payout_id</code>.
     */
    public void setMangopayPayoutId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>applet.payments.mangopay_payout_id</code>.
     */
    public Integer getMangopayPayoutId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>applet.payments.advert_id</code>.
     */
    public void setAdvertId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>applet.payments.advert_id</code>.
     */
    public Integer getAdvertId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>applet.payments.user_id</code>. usuario que recibe el pago
     */
    public void setUserId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>applet.payments.user_id</code>. usuario que recibe el pago
     */
    public Integer getUserId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>applet.payments.quantity</code>.
     */
    public void setQuantity(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>applet.payments.quantity</code>.
     */
    public BigDecimal getQuantity() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>applet.payments.fee</code>.
     */
    public void setFee(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>applet.payments.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>applet.payments.payment_certified</code>.
     */
    public void setPaymentCertified(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>applet.payments.payment_certified</code>.
     */
    public Byte getPaymentCertified() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>applet.payments.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>applet.payments.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>applet.payments.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>applet.payments.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Integer, Integer, Integer, Integer, BigDecimal, BigDecimal, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, Integer, Integer, Integer, Integer, BigDecimal, BigDecimal, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Payments.PAYMENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Payments.PAYMENTS.STRIPE_CHARGE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Payments.PAYMENTS.MANGOPAY_PAY_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Payments.PAYMENTS.MANGOPAY_PAYOUT_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Payments.PAYMENTS.ADVERT_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Payments.PAYMENTS.USER_ID;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Payments.PAYMENTS.QUANTITY;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Payments.PAYMENTS.FEE;
    }

    @Override
    public Field<Byte> field9() {
        return Payments.PAYMENTS.PAYMENT_CERTIFIED;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Payments.PAYMENTS.CREATED;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Payments.PAYMENTS.MODIFIED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStripeChargeId();
    }

    @Override
    public Integer component3() {
        return getMangopayPayId();
    }

    @Override
    public Integer component4() {
        return getMangopayPayoutId();
    }

    @Override
    public Integer component5() {
        return getAdvertId();
    }

    @Override
    public Integer component6() {
        return getUserId();
    }

    @Override
    public BigDecimal component7() {
        return getQuantity();
    }

    @Override
    public BigDecimal component8() {
        return getFee();
    }

    @Override
    public Byte component9() {
        return getPaymentCertified();
    }

    @Override
    public LocalDateTime component10() {
        return getCreated();
    }

    @Override
    public LocalDateTime component11() {
        return getModified();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStripeChargeId();
    }

    @Override
    public Integer value3() {
        return getMangopayPayId();
    }

    @Override
    public Integer value4() {
        return getMangopayPayoutId();
    }

    @Override
    public Integer value5() {
        return getAdvertId();
    }

    @Override
    public Integer value6() {
        return getUserId();
    }

    @Override
    public BigDecimal value7() {
        return getQuantity();
    }

    @Override
    public BigDecimal value8() {
        return getFee();
    }

    @Override
    public Byte value9() {
        return getPaymentCertified();
    }

    @Override
    public LocalDateTime value10() {
        return getCreated();
    }

    @Override
    public LocalDateTime value11() {
        return getModified();
    }

    @Override
    public PaymentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PaymentsRecord value2(String value) {
        setStripeChargeId(value);
        return this;
    }

    @Override
    public PaymentsRecord value3(Integer value) {
        setMangopayPayId(value);
        return this;
    }

    @Override
    public PaymentsRecord value4(Integer value) {
        setMangopayPayoutId(value);
        return this;
    }

    @Override
    public PaymentsRecord value5(Integer value) {
        setAdvertId(value);
        return this;
    }

    @Override
    public PaymentsRecord value6(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public PaymentsRecord value7(BigDecimal value) {
        setQuantity(value);
        return this;
    }

    @Override
    public PaymentsRecord value8(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public PaymentsRecord value9(Byte value) {
        setPaymentCertified(value);
        return this;
    }

    @Override
    public PaymentsRecord value10(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public PaymentsRecord value11(LocalDateTime value) {
        setModified(value);
        return this;
    }

    @Override
    public PaymentsRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, BigDecimal value7, BigDecimal value8, Byte value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentsRecord
     */
    public PaymentsRecord() {
        super(Payments.PAYMENTS);
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(Integer id, String stripeChargeId, Integer mangopayPayId, Integer mangopayPayoutId, Integer advertId, Integer userId, BigDecimal quantity, BigDecimal fee, Byte paymentCertified, LocalDateTime created, LocalDateTime modified) {
        super(Payments.PAYMENTS);

        setId(id);
        setStripeChargeId(stripeChargeId);
        setMangopayPayId(mangopayPayId);
        setMangopayPayoutId(mangopayPayoutId);
        setAdvertId(advertId);
        setUserId(userId);
        setQuantity(quantity);
        setFee(fee);
        setPaymentCertified(paymentCertified);
        setCreated(created);
        setModified(modified);
    }
}
