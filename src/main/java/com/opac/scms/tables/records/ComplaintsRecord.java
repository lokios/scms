/*
 * This file is generated by jOOQ.
 */
package com.opac.scms.tables.records;


import com.opac.scms.enums.ComplaintsType;
import com.opac.scms.tables.Complaints;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComplaintsRecord extends UpdatableRecordImpl<ComplaintsRecord> implements Record10<Integer, Integer, Integer, Integer, Integer, ComplaintsType, LocalDateTime, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>applet.complaints.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>applet.complaints.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>applet.complaints.advert_id</code>.
     */
    public void setAdvertId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>applet.complaints.advert_id</code>.
     */
    public Integer getAdvertId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>applet.complaints.denounced_user_id</code>.
     */
    public void setDenouncedUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>applet.complaints.denounced_user_id</code>.
     */
    public Integer getDenouncedUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>applet.complaints.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>applet.complaints.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>applet.complaints.complaint_reason_id</code>.
     */
    public void setComplaintReasonId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>applet.complaints.complaint_reason_id</code>.
     */
    public Integer getComplaintReasonId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>applet.complaints.type</code>.
     */
    public void setType(ComplaintsType value) {
        set(5, value);
    }

    /**
     * Getter for <code>applet.complaints.type</code>.
     */
    public ComplaintsType getType() {
        return (ComplaintsType) get(5);
    }

    /**
     * Setter for <code>applet.complaints.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>applet.complaints.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>applet.complaints.text</code>.
     */
    public void setText(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>applet.complaints.text</code>.
     */
    public String getText() {
        return (String) get(7);
    }

    /**
     * Setter for <code>applet.complaints.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>applet.complaints.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>applet.complaints.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>applet.complaints.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, ComplaintsType, LocalDateTime, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, ComplaintsType, LocalDateTime, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Complaints.COMPLAINTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Complaints.COMPLAINTS.ADVERT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Complaints.COMPLAINTS.DENOUNCED_USER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Complaints.COMPLAINTS.USER_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Complaints.COMPLAINTS.COMPLAINT_REASON_ID;
    }

    @Override
    public Field<ComplaintsType> field6() {
        return Complaints.COMPLAINTS.TYPE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Complaints.COMPLAINTS.DATE;
    }

    @Override
    public Field<String> field8() {
        return Complaints.COMPLAINTS.TEXT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Complaints.COMPLAINTS.CREATED;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Complaints.COMPLAINTS.MODIFIED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getAdvertId();
    }

    @Override
    public Integer component3() {
        return getDenouncedUserId();
    }

    @Override
    public Integer component4() {
        return getUserId();
    }

    @Override
    public Integer component5() {
        return getComplaintReasonId();
    }

    @Override
    public ComplaintsType component6() {
        return getType();
    }

    @Override
    public LocalDateTime component7() {
        return getDate();
    }

    @Override
    public String component8() {
        return getText();
    }

    @Override
    public LocalDateTime component9() {
        return getCreated();
    }

    @Override
    public LocalDateTime component10() {
        return getModified();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getAdvertId();
    }

    @Override
    public Integer value3() {
        return getDenouncedUserId();
    }

    @Override
    public Integer value4() {
        return getUserId();
    }

    @Override
    public Integer value5() {
        return getComplaintReasonId();
    }

    @Override
    public ComplaintsType value6() {
        return getType();
    }

    @Override
    public LocalDateTime value7() {
        return getDate();
    }

    @Override
    public String value8() {
        return getText();
    }

    @Override
    public LocalDateTime value9() {
        return getCreated();
    }

    @Override
    public LocalDateTime value10() {
        return getModified();
    }

    @Override
    public ComplaintsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value2(Integer value) {
        setAdvertId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value3(Integer value) {
        setDenouncedUserId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value5(Integer value) {
        setComplaintReasonId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value6(ComplaintsType value) {
        setType(value);
        return this;
    }

    @Override
    public ComplaintsRecord value7(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public ComplaintsRecord value8(String value) {
        setText(value);
        return this;
    }

    @Override
    public ComplaintsRecord value9(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ComplaintsRecord value10(LocalDateTime value) {
        setModified(value);
        return this;
    }

    @Override
    public ComplaintsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, ComplaintsType value6, LocalDateTime value7, String value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComplaintsRecord
     */
    public ComplaintsRecord() {
        super(Complaints.COMPLAINTS);
    }

    /**
     * Create a detached, initialised ComplaintsRecord
     */
    public ComplaintsRecord(Integer id, Integer advertId, Integer denouncedUserId, Integer userId, Integer complaintReasonId, ComplaintsType type, LocalDateTime date, String text, LocalDateTime created, LocalDateTime modified) {
        super(Complaints.COMPLAINTS);

        setId(id);
        setAdvertId(advertId);
        setDenouncedUserId(denouncedUserId);
        setUserId(userId);
        setComplaintReasonId(complaintReasonId);
        setType(type);
        setDate(date);
        setText(text);
        setCreated(created);
        setModified(modified);
    }
}
